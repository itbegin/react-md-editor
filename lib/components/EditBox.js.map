{"version":3,"sources":["../../src/components/EditBox.js"],"names":[],"mappings":"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","file":"EditBox.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport _ from 'lodash'\n\nconst selectDivStyle = {\n  display: 'inline-block',\n  position: 'relative',\n}\nconst fileInputStyle = {\n  position: 'absolute',\n  opacity: '0',\n  width: '100%',\n  height: '100%',\n  left: 0,\n  top: 0,\n  cursor: 'pointer',\n}\n\nclass EditBox extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.onBlur)\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.selectedPosition !== this.props.selectedPosition) {\n      this.setTextSelected(\n        this.editarea,\n        this.props.selectedPosition.start,\n        this.props.selectedPosition.end\n      )\n    }\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onBlur)\n  }\n  onBlur = (e) => {\n    if (e.target !== this.editarea) {\n      this.props.onBlur()\n    }\n  }\n  onSelect = () => {\n    const el = this.editarea\n    let start = 0\n    let end = 0\n    if (document.selection) {\n      const range = document.selection.createRange()\n      const drange = range.duplicate()\n\n      drange.moveToElementText(el)\n      drange.setEndPoint('EndToEnd', range)\n\n      start = drange.text.length - range.text.length\n      end = start + range.text.length\n    } else if (window.getSelection) {\n      start = el.selectionStart\n      end = el.selectionEnd\n    }\n    this.props.setSelectedPosition({ start, end })\n  }\n  setTextSelected = (inputDom, startIndex, endIndex) => {\n    if (inputDom.setSelectionRange) {\n      inputDom.setSelectionRange(startIndex, endIndex)\n    } else if (inputDom.createTextRange) {\n      const range = inputDom.createTextRange()\n      range.collapse(true);\n      range.moveStart('character', startIndex)\n      range.moveEnd('character', endIndex - startIndex - 1)\n      range.select()\n    }\n    inputDom.focus()\n    this.props.onFocus()\n  }\n  handleFileChange = (e) => {\n    const { imageUpload } = this.props\n    if (imageUpload) {\n      imageUpload(e.target.files[0], this.image)\n    }\n  }\n  image = (src = '') => {\n    const { value } = this.props\n    this.props.onChange(`${value}${value.length !== 0 ? '\\n' : ''}![](${src})`)\n  }\n  render() {\n    const { styles, value, focus, onChange, onFocus, imageUpload, style } = this.props\n    return (\n      <div style={_.merge({}, styles.editBox, style)}>\n        <div style={{ display: 'flex', flex: 1 }}>\n          <textarea\n            ref={(t) => (this.editarea = t)}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            onFocus={onFocus}\n            onSelect={this.onSelect}\n            style={_.merge({}, styles.editarea, focus && styles.editareaFocus)}\n            onDrop={(e) => {\n              e.preventDefault()\n              e.stopPropagation()\n              if (imageUpload) {\n                imageUpload(e.dataTransfer.files[0], this.image)\n              }\n            }}\n          />\n        </div>\n        <div style={_.merge({}, styles.editFooter, focus && styles.editFooterFocus)}>\n          <span style={_.merge({}, !imageUpload && { visibility: 'hidden' })}>\n            {'Attach files by dragging & dropping, or  '}\n            <div style={selectDivStyle}>\n              <span style={{ color: '#4078c0' }}>{'select'}</span>\n              <input type=\"file\" style={fileInputStyle} onChange={this.handleFileChange} />\n            </div>\n            {'.'}\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nEditBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  focus: PropTypes.bool.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  styles: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  selectedPosition: PropTypes.object.isRequired,\n  setSelectedPosition: PropTypes.func.isRequired,\n  format: PropTypes.func.isRequired,\n  imageUpload: PropTypes.func,\n}\n\nexport default EditBox\n"]}