{"version":3,"sources":["../../../src/components/tools/ToolBar.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEM,O;;;;;;;;;;;;;;qMACJ,K,GAAQ;AACN,aAAO;AADD,K,QAGR,a,GAAgB,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,YAAF,EAAd,CAAX;AAAA,K;;;;;6BACP;AAAA;;AAAA,mBACkC,KAAK,KADvC;AAAA,UACC,IADD,UACC,IADD;AAAA,UACO,MADP,UACO,MADP;AAAA,UACe,OADf,UACe,OADf;AAAA,UACwB,KADxB,UACwB,KADxB;AAAA,UAEC,KAFD,GAEiC,IAFjC,CAEC,KAFD;AAAA,UAEQ,SAFR,GAEiC,IAFjC,CAEQ,SAFR;;AAAA,UAEsB,MAFtB,4BAEiC,IAFjC;;AAAA,UAGC,KAHD,GAGW,KAAK,KAHhB,CAGC,KAHD;;AAIP,aACE;AAAA;AAAA;AACE,iBAAO,OAAO,QADhB;AAEE,mBAAS,OAFX;AAGE,uBAAa;AAAA,mBAAM,OAAK,aAAL,CAAmB,IAAnB,CAAN;AAAA,WAHf;AAIE,sBAAY;AAAA,mBAAM,OAAK,aAAL,CAAmB,KAAnB,CAAN;AAAA;AAJd;AAME;AAAA;AAAA,uBAAS,MAAT,IAAiB,OAAO,iBAAE,KAAF,CAAQ,EAAR,EAAY,OAAO,IAAnB,EAAyB,SAAS,OAAO,SAAzC,CAAxB;AACE;AAAA;AAAA,cAAG,WAAW,SAAd;AAEI,kBAAM,GAAN,CAAU,UAAC,CAAD,EAAI,CAAJ;AAAA,qBACR,wCAAM,KAAK,CAAX,EAAc,GAAG,CAAjB,GADQ;AAAA,aAAV;AAFJ;AADF,SANF;AAeG,iBAAS,8BAAC,KAAD,IAAO,OAAO,KAAd;AAfZ,OADF;AAmBD;;;;EA5BmB,gBAAM,S;;AA+B5B,QAAQ,SAAR,GAAoB;AAClB,WAAS,iBAAU,IADD;AAElB,UAAQ,iBAAU,MAAV,CAAiB,UAFP;AAGlB,QAAM,iBAAU,MAAV,CAAiB,UAHL;AAIlB,SAAO,iBAAU;AAJC,CAApB;;kBAOe,O","file":"ToolBar.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport _ from 'lodash'\n\nclass ToolBar extends React.Component {\n  state = {\n    hover: false,\n  }\n  onHoverChange = (hover) => this.setState({ hover })\n  render() {\n    const { icon, styles, onClick, Popup } = this.props\n    const { paths, transform, ...others } = icon\n    const { hover } = this.state\n    return (\n      <div\n        style={styles.iconWrap}\n        onClick={onClick}\n        onMouseOver={() => this.onHoverChange(true)}\n        onMouseOut={() => this.onHoverChange(false)}\n      >\n        <svg {...others} style={_.merge({}, styles.icon, hover && styles.iconHover)}>\n          <g transform={transform}>\n            {\n              paths.map((p, i) => (\n                <path key={i} d={p} />\n              ))\n            }\n          </g>\n        </svg>\n        {Popup && <Popup hover={hover} />}\n      </div>\n    )\n  }\n}\n\nToolBar.propTypes = {\n  onClick: PropTypes.func,\n  styles: PropTypes.object.isRequired,\n  icon: PropTypes.object.isRequired,\n  Popup: PropTypes.func,\n}\n\nexport default ToolBar\n"]}