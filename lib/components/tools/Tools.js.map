{"version":3,"sources":["../../../src/components/tools/Tools.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAM,cAAc,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4B,QAA5B,EAAsC,MAAtC,EAA8C,MAA9C,EAAsD,IAAtD,EAA4D,IAA5D,CAApB;;IAEM,K;;;;;;;;;;;;;;mMACJ,M,GAAS,UAAC,CAAD,EAAO;AACd,UAAM,SAAS,CAAC,EAAD,EAAK,GAAL,EAAU,IAAV,EAAgB,KAAhB,CAAf;AACA,YAAK,KAAL,CAAW,MAAX,CAAqB,OAAO,CAAP,CAArB,QAAmC,EAAnC;AACD,K,QACD,K,GAAQ,YAAM;AACZ,YAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,EAAxB;AACD,K,QACD,I,GAAO,YAAM;AACX,YAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,IAAxB;AACD,K,QACD,M,GAAS,YAAM;AACb,YAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB,EAAuB,GAAvB;AACD,K,QACD,I,GAAO,YAAM;AACX,YAAK,KAAL,CAAW,MAAX,CAAkB,OAAlB,EAA2B,OAA3B;AACD,K,QACD,I,GAAO,YAAM;AACX,YAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB,EAAuB,KAAvB;AACD,K,QACD,E,GAAK,YAAM;AACT,YAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,EAAzB;AACD,K,QACD,E,GAAK,YAAM;AACT,YAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,EAAxB;AACD,K;;;;;6BACQ;AAAA;;AAAA,mBAC6B,KAAK,KADlC;AAAA,UACC,MADD,UACC,MADD;AAAA,UACS,KADT,UACS,KADT;AAAA,UACgB,QADhB,UACgB,QADhB;;AAEP,UAAM,YAAY,UAAU,MAAV,GAAmB,QAAnB,GAA8B,MAAhD;AACA,aACE;AAAA;AAAA,UAAK,OAAO,OAAO,KAAnB;AAEI,yBAAE,GAAF,CAAM,WAAN,EAAmB,UAAC,IAAD,EAAU;AAC3B,cAAI,cAAJ;AACA,cAAI,gBAAJ;AACA,cAAI,SAAS,QAAb,EAAuB;AACrB,oBAAQ,eAAC,KAAD;AAAA,qBAAW,kEAAiB,KAAjB,IAAwB,QAAQ,MAAhC,EAAwC,SAAS,OAAK,IAAL,CAAjD,IAAX;AAAA,aAAR;AACD,WAFD,MAEO;AACL,sBAAU,OAAK,IAAL,CAAV;AACD;AACD,iBACE;AACE,iBAAK,IADP;AAEE,oBAAQ,MAFV;AAGE,kBAAM,gBAAM,IAAN,CAHR;AAIE,mBAAO,KAJT;AAKE,qBAAS;AALX,YADF;AASD,SAjBD,CAFJ;AAqBE;AACE,eAAK,KADP;AAEE,kBAAQ,MAFV;AAGE,gBAAM,gBAAM,SAAN,CAHR;AAIE,mBAAS;AAAA,mBAAM,SAAS,SAAT,CAAN;AAAA;AAJX;AArBF,OADF;AA8BD;;;;EA3DiB,gBAAM,S;;AA8D1B,MAAM,SAAN,GAAkB;AAChB,UAAQ,iBAAU,MAAV,CAAiB,UADT;AAEhB,UAAQ,iBAAU,IAAV,CAAe,UAFP;AAGhB,SAAO,iBAAU,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,CAAhB,EAAoC,UAH3B;AAIhB,YAAU,iBAAU,IAAV,CAAe;AAJT,CAAlB;;kBAOe,K","file":"Tools.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport _ from 'lodash'\nimport ToolBar from './ToolBar'\nimport icons from './icons.json'\nimport HeaderPopup from './components/HeaderPopup'\n\nconst formatIcons = ['header', 'quote', 'blod', 'italic', 'code', 'link', 'ol', 'ul']\n\nclass Tools extends React.Component {\n  header = (i) => {\n    const levels = ['', '#', '##', '###']\n    this.props.format(`${levels[i]} `, '')\n  }\n  quote = () => {\n    this.props.format('> ', '')\n  }\n  blod = () => {\n    this.props.format('**', '**')\n  }\n  italic = () => {\n    this.props.format('*', '*')\n  }\n  code = () => {\n    this.props.format('```\\n', '\\n```')\n  }\n  link = () => {\n    this.props.format('[', ']()')\n  }\n  ol = () => {\n    this.props.format('1. ', '')\n  }\n  ul = () => {\n    this.props.format('- ', '')\n  }\n  render() {\n    const { styles, scale, setScale } = this.props\n    const nextScale = scale === 'full' ? 'normal' : 'full'\n    return (\n      <div style={styles.tools}>\n        {\n          _.map(formatIcons, (icon) => {\n            let popup\n            let onClick\n            if (icon === 'header') {\n              popup = (props) => <HeaderPopup {...props} styles={styles} onClick={this[icon]} />\n            } else {\n              onClick = this[icon]\n            }\n            return (\n              <ToolBar\n                key={icon}\n                styles={styles}\n                icon={icons[icon]}\n                Popup={popup}\n                onClick={onClick}\n              />\n            )\n          })\n        }\n        <ToolBar\n          key={scale}\n          styles={styles}\n          icon={icons[nextScale]}\n          onClick={() => setScale(nextScale)}\n        />\n      </div>\n    )\n  }\n}\n\nTools.propTypes = {\n  styles: PropTypes.object.isRequired,\n  format: PropTypes.func.isRequired,\n  scale: PropTypes.oneOf(['normal', 'full']).isRequired,\n  setScale: PropTypes.func.isRequired,\n}\n\nexport default Tools\n"]}